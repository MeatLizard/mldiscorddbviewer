{"ast":null,"code":"var _jsxFileName = \"/Users/mist/Documents/development/supermeow/src/components/ChannelView.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { Box, Drawer, List, ListItem, ListItemText, Typography, Divider, AppBar, Toolbar, InputBase, IconButton, Button, Checkbox, FormControlLabel, Menu, MenuItem } from '@mui/material';\nimport SearchIcon from '@mui/icons-material/Search';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst drawerWidth = 240;\nconst ChannelView = () => {\n  _s();\n  const {\n    guildId,\n    channelId\n  } = useParams();\n  const navigate = useNavigate();\n  const [guilds, setGuilds] = useState([]);\n  const [selectedGuild, setSelectedGuild] = useState(null);\n  const [channels, setChannels] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const [filteredMessages, setFilteredMessages] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [hasMore, setHasMore] = useState(true);\n  const [page, setPage] = useState(1);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchUser, setSearchUser] = useState(''); // Add a field to search by user\n  const [globalSearch, setGlobalSearch] = useState(false);\n  const [anchorEl, setAnchorEl] = useState(null); // For search tools dropdown\n\n  // Fetch guilds when component mounts\n  useEffect(() => {\n    const fetchGuilds = async () => {\n      try {\n        const response = await axios.get('/api/guilds');\n        setGuilds(response.data);\n        if (guildId) {\n          const selected = response.data.find(g => g.db_file === guildId);\n          setSelectedGuild(selected);\n        }\n      } catch (error) {\n        console.error('Error fetching guilds:', error);\n      }\n    };\n    fetchGuilds();\n  }, [guildId]);\n\n  // Fetch channels when a guild is selected\n  useEffect(() => {\n    if (selectedGuild) {\n      const fetchChannels = async () => {\n        try {\n          const response = await axios.get(`/api/guilds/${selectedGuild.db_file}/channels`);\n          setChannels(response.data);\n        } catch (error) {\n          console.error('Error fetching channels:', error);\n        }\n      };\n      fetchChannels();\n    }\n  }, [selectedGuild]);\n\n  // Fetch users for the user sidebar\n  const fetchUsers = async () => {\n    if (selectedGuild) {\n      try {\n        const response = await axios.get(`/api/guilds/${selectedGuild.db_file}/users`);\n        setUsers(response.data);\n      } catch (error) {\n        console.error('Error fetching users:', error);\n      }\n    }\n  };\n\n  // Fetch users when a guild is selected\n  useEffect(() => {\n    fetchUsers();\n  }, [selectedGuild]);\n\n  // Fetch messages for the selected channel with pagination\n  useEffect(() => {\n    if (channelId) {\n      const fetchMessages = async () => {\n        try {\n          const response = await axios.get(`/api/guilds/${guildId}/channels/${channelId}?page=${page}`);\n          if (page === 1) {\n            setMessages(response.data);\n          } else {\n            setMessages(prevMessages => [...prevMessages, ...response.data]);\n          }\n          if (response.data.length === 0) {\n            setHasMore(false);\n          }\n        } catch (error) {\n          console.error('Error fetching messages:', error);\n        }\n      };\n      fetchMessages();\n    }\n  }, [channelId, page]);\n\n  // Infinite scroll function\n  const loadMoreMessages = () => {\n    setPage(prevPage => prevPage + 1);\n  };\n\n  // Handle search tools dropdown\n  const handleSearchToolsOpen = event => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleSearchToolsClose = () => {\n    setAnchorEl(null);\n  };\n\n  // Handle search input to filter messages\n  useEffect(() => {\n    let filteredData = [...messages];\n    if (searchTerm) {\n      const lowercasedFilter = searchTerm.toLowerCase();\n      filteredData = filteredData.filter(message => message.content.toLowerCase().includes(lowercasedFilter) || message.user_name.toLowerCase().includes(lowercasedFilter));\n    }\n\n    // Apply user filter\n    if (searchUser) {\n      filteredData = filteredData.filter(message => message.user_name.toLowerCase().includes(searchUser.toLowerCase()));\n    }\n    setFilteredMessages(filteredData);\n  }, [searchTerm, messages, searchUser]);\n\n  // Handle channel selection\n  const handleChannelSelect = channelName => {\n    navigate(`/guild/${selectedGuild.db_file}/channel/${channelName}`);\n    setPage(1); // Reset the pagination when switching channels\n    setHasMore(true);\n  };\n\n  // Handle user click for profile (navigate to user profile page)\n  const handleUserClick = userId => {\n    navigate(`/guild/${guildId}/users/${userId}`);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Drawer, {\n      sx: {\n        width: drawerWidth,\n        flexShrink: 0,\n        '& .MuiDrawer-paper': {\n          width: drawerWidth,\n          boxSizing: 'border-box'\n        }\n      },\n      variant: \"permanent\",\n      anchor: \"left\",\n      children: [/*#__PURE__*/_jsxDEV(Toolbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: [guilds.map(guild => /*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          onClick: () => setSelectedGuild(guild),\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: guild.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this)\n        }, guild.db_file, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this)), channels.map(channel => /*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          onClick: () => handleChannelSelect(channel.name),\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: channel.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this)\n        }, channel.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      component: \"main\",\n      sx: {\n        flexGrow: 1,\n        p: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Toolbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AppBar, {\n        position: \"static\",\n        children: /*#__PURE__*/_jsxDEV(Toolbar, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            sx: {\n              flexGrow: 1\n            },\n            children: \"Messages\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: 'relative',\n              display: 'flex',\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(IconButton, {\n              children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(InputBase, {\n              placeholder: \"Search Messages\\u2026\",\n              inputProps: {\n                'aria-label': 'search'\n              },\n              onChange: e => setSearchTerm(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleSearchToolsOpen,\n              style: {\n                marginLeft: '8px'\n              },\n              children: \"Search Tools\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Menu, {\n              anchorEl: anchorEl,\n              open: Boolean(anchorEl),\n              onClose: handleSearchToolsClose,\n              children: /*#__PURE__*/_jsxDEV(MenuItem, {\n                children: /*#__PURE__*/_jsxDEV(InputBase, {\n                  placeholder: \"Filter by User\\u2026\",\n                  inputProps: {\n                    'aria-label': 'search by user'\n                  },\n                  onChange: e => setSearchUser(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                checked: globalSearch,\n                onChange: e => setGlobalSearch(e.target.checked)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 19\n              }, this),\n              label: \"Global Search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n        dataLength: filteredMessages.length,\n        next: loadMoreMessages,\n        hasMore: hasMore,\n        loader: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 19\n        }, this),\n        children: filteredMessages.map((message, index) => /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            my: 2,\n            p: 2,\n            borderRadius: 1,\n            bgcolor: 'grey.800',\n            color: 'white'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            children: [message.user_name, \" - \", new Date(message.timestamp).toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: message.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n      sx: {\n        width: drawerWidth,\n        flexShrink: 0,\n        '& .MuiDrawer-paper': {\n          width: drawerWidth,\n          boxSizing: 'border-box'\n        }\n      },\n      variant: \"permanent\",\n      anchor: \"right\",\n      children: [/*#__PURE__*/_jsxDEV(Toolbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: users.sort((a, b) => b.total_messages - a.total_messages).map(user => /*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          onClick: () => handleUserClick(user.user_id),\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: `${user.user_name} (${user.total_messages})`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 17\n          }, this)\n        }, user.user_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n};\n_s(ChannelView, \"7m7+SUdn5K0Jb307jyY+w87jT0A=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ChannelView;\nexport default ChannelView;\nvar _c;\n$RefreshReg$(_c, \"ChannelView\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","Box","Drawer","List","ListItem","ListItemText","Typography","Divider","AppBar","Toolbar","InputBase","IconButton","Button","Checkbox","FormControlLabel","Menu","MenuItem","SearchIcon","InfiniteScroll","axios","jsxDEV","_jsxDEV","drawerWidth","ChannelView","_s","guildId","channelId","navigate","guilds","setGuilds","selectedGuild","setSelectedGuild","channels","setChannels","messages","setMessages","filteredMessages","setFilteredMessages","users","setUsers","hasMore","setHasMore","page","setPage","searchTerm","setSearchTerm","searchUser","setSearchUser","globalSearch","setGlobalSearch","anchorEl","setAnchorEl","fetchGuilds","response","get","data","selected","find","g","db_file","error","console","fetchChannels","fetchUsers","fetchMessages","prevMessages","length","loadMoreMessages","prevPage","handleSearchToolsOpen","event","currentTarget","handleSearchToolsClose","filteredData","lowercasedFilter","toLowerCase","filter","message","content","includes","user_name","handleChannelSelect","channelName","handleUserClick","userId","sx","display","children","width","flexShrink","boxSizing","variant","anchor","fileName","_jsxFileName","lineNumber","columnNumber","map","guild","button","onClick","primary","name","channel","component","flexGrow","p","position","style","alignItems","placeholder","inputProps","onChange","e","target","value","marginLeft","open","Boolean","onClose","control","checked","label","dataLength","next","loader","index","my","borderRadius","bgcolor","color","Date","timestamp","toLocaleString","sort","a","b","total_messages","user","user_id","_c","$RefreshReg$"],"sources":["/Users/mist/Documents/development/supermeow/src/components/ChannelView.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { Box, Drawer, List, ListItem, ListItemText, Typography, Divider, AppBar, Toolbar, InputBase, IconButton, Button, Checkbox, FormControlLabel, Menu, MenuItem } from '@mui/material';\nimport SearchIcon from '@mui/icons-material/Search';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport axios from 'axios';\n\nconst drawerWidth = 240;\n\nconst ChannelView = () => {\n  const { guildId, channelId } = useParams();\n  const navigate = useNavigate();\n  const [guilds, setGuilds] = useState([]);\n  const [selectedGuild, setSelectedGuild] = useState(null);\n  const [channels, setChannels] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const [filteredMessages, setFilteredMessages] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [hasMore, setHasMore] = useState(true);\n  const [page, setPage] = useState(1);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchUser, setSearchUser] = useState(''); // Add a field to search by user\n  const [globalSearch, setGlobalSearch] = useState(false);\n  const [anchorEl, setAnchorEl] = useState(null); // For search tools dropdown\n\n  // Fetch guilds when component mounts\n  useEffect(() => {\n    const fetchGuilds = async () => {\n      try {\n        const response = await axios.get('/api/guilds');\n        setGuilds(response.data);\n        if (guildId) {\n          const selected = response.data.find(g => g.db_file === guildId);\n          setSelectedGuild(selected);\n        }\n      } catch (error) {\n        console.error('Error fetching guilds:', error);\n      }\n    };\n    fetchGuilds();\n  }, [guildId]);\n\n  // Fetch channels when a guild is selected\n  useEffect(() => {\n    if (selectedGuild) {\n      const fetchChannels = async () => {\n        try {\n          const response = await axios.get(`/api/guilds/${selectedGuild.db_file}/channels`);\n          setChannels(response.data);\n        } catch (error) {\n          console.error('Error fetching channels:', error);\n        }\n      };\n      fetchChannels();\n    }\n  }, [selectedGuild]);\n\n  // Fetch users for the user sidebar\n  const fetchUsers = async () => {\n    if (selectedGuild) {\n      try {\n        const response = await axios.get(`/api/guilds/${selectedGuild.db_file}/users`);\n        setUsers(response.data);\n      } catch (error) {\n        console.error('Error fetching users:', error);\n      }\n    }\n  };\n\n  // Fetch users when a guild is selected\n  useEffect(() => {\n    fetchUsers();\n  }, [selectedGuild]);\n\n  // Fetch messages for the selected channel with pagination\n  useEffect(() => {\n    if (channelId) {\n      const fetchMessages = async () => {\n        try {\n          const response = await axios.get(`/api/guilds/${guildId}/channels/${channelId}?page=${page}`);\n          if (page === 1) {\n            setMessages(response.data);\n          } else {\n            setMessages((prevMessages) => [...prevMessages, ...response.data]);\n          }\n          if (response.data.length === 0) {\n            setHasMore(false);\n          }\n        } catch (error) {\n          console.error('Error fetching messages:', error);\n        }\n      };\n      fetchMessages();\n    }\n  }, [channelId, page]);\n\n  // Infinite scroll function\n  const loadMoreMessages = () => {\n    setPage((prevPage) => prevPage + 1);\n  };\n\n  // Handle search tools dropdown\n  const handleSearchToolsOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  \n  const handleSearchToolsClose = () => {\n    setAnchorEl(null);\n  };\n\n  // Handle search input to filter messages\n  useEffect(() => {\n    let filteredData = [...messages];\n    if (searchTerm) {\n      const lowercasedFilter = searchTerm.toLowerCase();\n      filteredData = filteredData.filter((message) =>\n        message.content.toLowerCase().includes(lowercasedFilter) ||\n        message.user_name.toLowerCase().includes(lowercasedFilter)\n      );\n    }\n\n    // Apply user filter\n    if (searchUser) {\n      filteredData = filteredData.filter(message => message.user_name.toLowerCase().includes(searchUser.toLowerCase()));\n    }\n\n    setFilteredMessages(filteredData);\n  }, [searchTerm, messages, searchUser]);\n\n  // Handle channel selection\n  const handleChannelSelect = (channelName) => {\n    navigate(`/guild/${selectedGuild.db_file}/channel/${channelName}`);\n    setPage(1); // Reset the pagination when switching channels\n    setHasMore(true);\n  };\n\n  // Handle user click for profile (navigate to user profile page)\n  const handleUserClick = (userId) => {\n    navigate(`/guild/${guildId}/users/${userId}`);\n  };\n\n  return (\n    <Box sx={{ display: 'flex' }}>\n      {/* Left sidebar for channels */}\n      <Drawer\n        sx={{\n          width: drawerWidth,\n          flexShrink: 0,\n          '& .MuiDrawer-paper': {\n            width: drawerWidth,\n            boxSizing: 'border-box',\n          },\n        }}\n        variant=\"permanent\"\n        anchor=\"left\"\n      >\n        <Toolbar />\n        <Divider />\n        <List>\n          {guilds.map((guild) => (\n            <ListItem button key={guild.db_file} onClick={() => setSelectedGuild(guild)}>\n              <ListItemText primary={guild.name} />\n            </ListItem>\n          ))}\n          {channels.map((channel) => (\n            <ListItem button key={channel.name} onClick={() => handleChannelSelect(channel.name)}>\n              <ListItemText primary={channel.name} />\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n\n      {/* Main content area for messages */}\n      <Box component=\"main\" sx={{ flexGrow: 1, p: 3 }}>\n        <Toolbar />\n        <AppBar position=\"static\">\n          <Toolbar>\n            <Typography variant=\"h6\" sx={{ flexGrow: 1 }}>\n              Messages\n            </Typography>\n\n            {/* Search Bar with Search Tools */}\n            <div style={{ position: 'relative', display: 'flex', alignItems: 'center' }}>\n              <IconButton>\n                <SearchIcon />\n              </IconButton>\n              <InputBase\n                placeholder=\"Search Messages…\"\n                inputProps={{ 'aria-label': 'search' }}\n                onChange={(e) => setSearchTerm(e.target.value)}\n              />\n              <Button onClick={handleSearchToolsOpen} style={{ marginLeft: '8px' }}>Search Tools</Button>\n              <Menu\n                anchorEl={anchorEl}\n                open={Boolean(anchorEl)}\n                onClose={handleSearchToolsClose}\n              >\n                {/* User Filter */}\n                <MenuItem>\n                  <InputBase\n                    placeholder=\"Filter by User…\"\n                    inputProps={{ 'aria-label': 'search by user' }}\n                    onChange={(e) => setSearchUser(e.target.value)}\n                  />\n                </MenuItem>\n              </Menu>\n\n              {/* Global Search Checkbox */}\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={globalSearch}\n                    onChange={(e) => setGlobalSearch(e.target.checked)}\n                  />\n                }\n                label=\"Global Search\"\n              />\n            </div>\n          </Toolbar>\n        </AppBar>\n\n        <InfiniteScroll\n          dataLength={filteredMessages.length}\n          next={loadMoreMessages}\n          hasMore={hasMore}\n          loader={<h4>Loading...</h4>}\n        >\n          {filteredMessages.map((message, index) => (\n            <Box key={index} sx={{ my: 2, p: 2, borderRadius: 1, bgcolor: 'grey.800', color: 'white' }}>\n              <Typography variant=\"subtitle2\">{message.user_name} - {new Date(message.timestamp).toLocaleString()}</Typography>\n              <Typography variant=\"body1\">{message.content}</Typography>\n            </Box>\n          ))}\n        </InfiniteScroll>\n      </Box>\n\n      {/* Right sidebar for users */}\n      <Drawer\n        sx={{\n          width: drawerWidth,\n          flexShrink: 0,\n          '& .MuiDrawer-paper': {\n            width: drawerWidth,\n            boxSizing: 'border-box',\n          },\n        }}\n        variant=\"permanent\"\n        anchor=\"right\"\n      >\n        <Toolbar />\n        <Divider />\n        <List>\n          {users\n            .sort((a, b) => b.total_messages - a.total_messages)\n            .map((user) => (\n              <ListItem button key={user.user_id} onClick={() => handleUserClick(user.user_id)}>\n                <ListItemText primary={`${user.user_name} (${user.total_messages})`} />\n              </ListItem>\n            ))}\n        </List>\n      </Drawer>\n    </Box>\n  );\n};\n\nexport default ChannelView;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
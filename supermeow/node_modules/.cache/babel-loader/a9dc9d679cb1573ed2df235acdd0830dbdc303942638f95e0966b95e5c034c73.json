{"ast":null,"code":"var _jsxFileName = \"/Users/mist/Documents/development/supermeow/src/components/UserProfile.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Box, Typography, List, ListItem, ListItemText, Divider } from '@mui/material';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserProfile = () => {\n  _s();\n  const {\n    guildId,\n    userId\n  } = useParams(); // Get guildId and userId from the URL params\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Fetch user profile data when the component mounts\n  useEffect(() => {\n    const fetchUserProfile = async () => {\n      try {\n        const response = await axios.get(`/api/guilds/${guildId}/users/${userId}`);\n        setUser(response.data);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching user profile:', error);\n      }\n    };\n    fetchUserProfile();\n  }, [guildId, userId]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      children: \"Loading user profile...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: [user.user_name, \"'s Profile\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {\n      sx: {\n        mb: 2\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      children: [\"Total Messages: \", user.total_messages]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      children: \"Messages per Channel:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: user.channels.map(channel => /*#__PURE__*/_jsxDEV(ListItem, {\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: `${channel.channel_name}: ${channel.message_count} messages`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)\n      }, channel.channel_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(UserProfile, \"9HteoXd5pv8l0WBFgzinZrlwTLw=\", false, function () {\n  return [useParams];\n});\n_c = UserProfile;\nexport default UserProfile;\nvar _c;\n$RefreshReg$(_c, \"UserProfile\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Box","Typography","List","ListItem","ListItemText","Divider","axios","jsxDEV","_jsxDEV","UserProfile","_s","guildId","userId","user","setUser","loading","setLoading","fetchUserProfile","response","get","data","error","console","variant","children","fileName","_jsxFileName","lineNumber","columnNumber","sx","p","gutterBottom","user_name","mb","total_messages","channels","map","channel","primary","channel_name","message_count","channel_id","_c","$RefreshReg$"],"sources":["/Users/mist/Documents/development/supermeow/src/components/UserProfile.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Box, Typography, List, ListItem, ListItemText, Divider } from '@mui/material';\nimport axios from 'axios';\n\nconst UserProfile = () => {\n  const { guildId, userId } = useParams(); // Get guildId and userId from the URL params\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Fetch user profile data when the component mounts\n  useEffect(() => {\n    const fetchUserProfile = async () => {\n      try {\n        const response = await axios.get(`/api/guilds/${guildId}/users/${userId}`);\n        setUser(response.data);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching user profile:', error);\n      }\n    };\n\n    fetchUserProfile();\n  }, [guildId, userId]);\n\n  if (loading) {\n    return <Typography variant=\"h5\">Loading user profile...</Typography>;\n  }\n\n  return (\n    <Box sx={{ p: 3 }}>\n      <Typography variant=\"h4\" gutterBottom>\n        {user.user_name}'s Profile\n      </Typography>\n      <Divider sx={{ mb: 2 }} />\n\n      <Typography variant=\"h6\">Total Messages: {user.total_messages}</Typography>\n      <Typography variant=\"h6\">Messages per Channel:</Typography>\n      <List>\n        {user.channels.map((channel) => (\n          <ListItem key={channel.channel_id}>\n            <ListItemText primary={`${channel.channel_name}: ${channel.message_count} messages`} />\n          </ListItem>\n        ))}\n      </List>\n    </Box>\n  );\n};\n\nexport default UserProfile;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
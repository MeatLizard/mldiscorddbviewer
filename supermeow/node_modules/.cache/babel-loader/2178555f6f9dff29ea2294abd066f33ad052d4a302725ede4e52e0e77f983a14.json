{"ast":null,"code":"var _jsxFileName = \"/Users/mist/Documents/development/supermeow/src/components/UserProfile.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Box, Typography } from '@mui/material';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserProfile = () => {\n  _s();\n  const {\n    guildId,\n    userId\n  } = useParams();\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    const fetchUserProfile = async () => {\n      try {\n        const response = await axios.get(`/api/guilds/${guildId}/users/${userId}`);\n        setUser(response.data);\n      } catch (error) {\n        console.error('Error fetching user profile:', error);\n      }\n    };\n    fetchUserProfile();\n  }, [guildId, userId]);\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      children: \"Loading user profile...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      children: [user.user_name, \"'s Profile\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      children: [\"Total Messages: \", user.total_messages]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      children: \"Messages by Channel:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), user.channels.map(channel => /*#__PURE__*/_jsxDEV(Typography, {\n      children: [channel.channel_name, \": \", channel.message_count, \" messages\"]\n    }, channel.channel_id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(UserProfile, \"y2Pph+rUbfaDyqdrEPdfNPXlMCU=\", false, function () {\n  return [useParams];\n});\n_c = UserProfile;\nexport default UserProfile;\nvar _c;\n$RefreshReg$(_c, \"UserProfile\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Box","Typography","axios","jsxDEV","_jsxDEV","UserProfile","_s","guildId","userId","user","setUser","fetchUserProfile","response","get","data","error","console","variant","children","fileName","_jsxFileName","lineNumber","columnNumber","sx","p","user_name","total_messages","channels","map","channel","channel_name","message_count","channel_id","_c","$RefreshReg$"],"sources":["/Users/mist/Documents/development/supermeow/src/components/UserProfile.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Box, Typography } from '@mui/material';\nimport axios from 'axios';\n\nconst UserProfile = () => {\n  const { guildId, userId } = useParams();\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    const fetchUserProfile = async () => {\n      try {\n        const response = await axios.get(`/api/guilds/${guildId}/users/${userId}`);\n        setUser(response.data);\n      } catch (error) {\n        console.error('Error fetching user profile:', error);\n      }\n    };\n    fetchUserProfile();\n  }, [guildId, userId]);\n\n  if (!user) {\n    return <Typography variant=\"h5\">Loading user profile...</Typography>;\n  }\n\n  return (\n    <Box sx={{ p: 3 }}>\n      <Typography variant=\"h4\">{user.user_name}'s Profile</Typography>\n      <Typography variant=\"h6\">Total Messages: {user.total_messages}</Typography>\n      <Typography variant=\"h6\">Messages by Channel:</Typography>\n      {user.channels.map((channel) => (\n        <Typography key={channel.channel_id}>{channel.channel_name}: {channel.message_count} messages</Typography>\n      ))}\n    </Box>\n  );\n};\n\nexport default UserProfile;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,GAAG,EAAEC,UAAU,QAAQ,eAAe;AAC/C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM;IAAEC,OAAO;IAAEC;EAAO,CAAC,GAAGT,SAAS,CAAC,CAAC;EACvC,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd,MAAMa,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,eAAeN,OAAO,UAAUC,MAAM,EAAE,CAAC;QAC1EE,OAAO,CAACE,QAAQ,CAACE,IAAI,CAAC;MACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACtD;IACF,CAAC;IACDJ,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,CAACJ,OAAO,EAAEC,MAAM,CAAC,CAAC;EAErB,IAAI,CAACC,IAAI,EAAE;IACT,oBAAOL,OAAA,CAACH,UAAU;MAACgB,OAAO,EAAC,IAAI;MAAAC,QAAA,EAAC;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC;EACtE;EAEA,oBACElB,OAAA,CAACJ,GAAG;IAACuB,EAAE,EAAE;MAAEC,CAAC,EAAE;IAAE,CAAE;IAAAN,QAAA,gBAChBd,OAAA,CAACH,UAAU;MAACgB,OAAO,EAAC,IAAI;MAAAC,QAAA,GAAET,IAAI,CAACgB,SAAS,EAAC,YAAU;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eAChElB,OAAA,CAACH,UAAU;MAACgB,OAAO,EAAC,IAAI;MAAAC,QAAA,GAAC,kBAAgB,EAACT,IAAI,CAACiB,cAAc;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CAAC,eAC3ElB,OAAA,CAACH,UAAU;MAACgB,OAAO,EAAC,IAAI;MAAAC,QAAA,EAAC;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,EACzDb,IAAI,CAACkB,QAAQ,CAACC,GAAG,CAAEC,OAAO,iBACzBzB,OAAA,CAACH,UAAU;MAAAiB,QAAA,GAA2BW,OAAO,CAACC,YAAY,EAAC,IAAE,EAACD,OAAO,CAACE,aAAa,EAAC,WAAS;IAAA,GAA5EF,OAAO,CAACG,UAAU;MAAAb,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAsE,CAC1G,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAChB,EAAA,CA9BID,WAAW;EAAA,QACaN,SAAS;AAAA;AAAAkC,EAAA,GADjC5B,WAAW;AAgCjB,eAAeA,WAAW;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/mist/Documents/development/supermeow/src/components/UserProfile.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Box, Typography, CircularProgress } from '@mui/material';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserProfile = () => {\n  _s();\n  const {\n    guildId,\n    userId\n  } = useParams(); // Fetch userId and guildId from the URL\n  const [user, setUser] = useState(null); // Store user data\n  const [loading, setLoading] = useState(true); // Loading state\n\n  // Fetch user profile data when component mounts\n  useEffect(() => {\n    const fetchUserProfile = async () => {\n      try {\n        const response = await axios.get(`/api/guilds/${guildId}/users/${userId}`);\n        setUser(response.data); // Set the fetched user data\n        setLoading(false); // Stop loading\n      } catch (error) {\n        console.error('Error fetching user profile:', error);\n        setLoading(false); // Stop loading even if there's an error\n      }\n    };\n    fetchUserProfile();\n  }, [guildId, userId]);\n  if (loading) {\n    // Show loading spinner while data is being fetched\n    return /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }, this);\n  }\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      children: \"User not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      children: [user.user_name, \"'s Profile\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      children: [\"Total Messages: \", user.total_messages]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      sx: {\n        mt: 2\n      },\n      children: \"Messages by Channel:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), user.channels && user.channels.length > 0 ? user.channels.map(channel => /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      children: [channel.channel_name, \": \", channel.message_count, \" messages\"]\n    }, channel.channel_id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      children: \"No messages available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(UserProfile, \"9HteoXd5pv8l0WBFgzinZrlwTLw=\", false, function () {\n  return [useParams];\n});\n_c = UserProfile;\nexport default UserProfile;\nvar _c;\n$RefreshReg$(_c, \"UserProfile\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Box","Typography","CircularProgress","axios","jsxDEV","_jsxDEV","UserProfile","_s","guildId","userId","user","setUser","loading","setLoading","fetchUserProfile","response","get","data","error","console","fileName","_jsxFileName","lineNumber","columnNumber","variant","children","sx","p","user_name","total_messages","mt","channels","length","map","channel","channel_name","message_count","channel_id","_c","$RefreshReg$"],"sources":["/Users/mist/Documents/development/supermeow/src/components/UserProfile.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Box, Typography, CircularProgress } from '@mui/material';\nimport axios from 'axios';\n\nconst UserProfile = () => {\n  const { guildId, userId } = useParams(); // Fetch userId and guildId from the URL\n  const [user, setUser] = useState(null); // Store user data\n  const [loading, setLoading] = useState(true); // Loading state\n\n  // Fetch user profile data when component mounts\n  useEffect(() => {\n    const fetchUserProfile = async () => {\n      try {\n        const response = await axios.get(`/api/guilds/${guildId}/users/${userId}`);\n        setUser(response.data); // Set the fetched user data\n        setLoading(false); // Stop loading\n      } catch (error) {\n        console.error('Error fetching user profile:', error);\n        setLoading(false); // Stop loading even if there's an error\n      }\n    };\n    fetchUserProfile();\n  }, [guildId, userId]);\n\n  if (loading) {\n    // Show loading spinner while data is being fetched\n    return <CircularProgress />;\n  }\n\n  if (!user) {\n    return <Typography variant=\"h5\">User not found</Typography>;\n  }\n\n  return (\n    <Box sx={{ p: 3 }}>\n      <Typography variant=\"h4\">{user.user_name}'s Profile</Typography>\n      <Typography variant=\"h6\">Total Messages: {user.total_messages}</Typography>\n      <Typography variant=\"h6\" sx={{ mt: 2 }}>Messages by Channel:</Typography>\n      \n      {user.channels && user.channels.length > 0 ? (\n        user.channels.map((channel) => (\n          <Typography key={channel.channel_id} variant=\"body1\">\n            {channel.channel_name}: {channel.message_count} messages\n          </Typography>\n        ))\n      ) : (\n        <Typography variant=\"body1\">No messages available</Typography>\n      )}\n    </Box>\n  );\n};\n\nexport default UserProfile;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}